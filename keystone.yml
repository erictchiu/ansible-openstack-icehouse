---
- name: Install and configure identity service Keystone
  hosts: controller
  remote_user: root

  vars:

    KEYSTONE_DBPASS: keystone
    ADMIN_TOKEN: a1s2d3f4g5h6j7k8

  tasks:

    - name: install Keystone
      yum: pkg={{item}} state=installed
      with_items:
       - openstack-keystone
       - python-keystoneclient
      when: ansible_hostname == "controller"

    - name: Config database
      command: openstack-config --set /etc/keystone/keystone.conf database connection mysql://keystone:{{ KEYSTONE_DBPASS }}@controller/keystone

    - name: Create MySQL database
      command: mysql -e "CREATE DATABASE keystone"

    - name: Grant 1
      command: mysql -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '{{ KEYSTONE_DBPASS }}'"

    - name: Grant 2
      command: mysql -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '{{ KEYSTONE_DBPASS }}'"

    - name: Flush Privileges
      command: mysql -e "FLUSH PRIVILEGES"

    - name: Keystone db sync
      command: su -s /bin/sh -c "keystone-manage db_sync" keystone

    - name: Define auth token
      command: openstack-config --set /etc/keystone/keystone.conf DEFAULT admin_token {{ ADMIN_TOKEN }}

    - name: Step 6a
      command: keystone-manage pki_setup --keystone-user keystone --keystone-group keystone

    - name: Step 6b
      command: chown -R keystone:keystone /etc/keystone/ssl

    - name: Step 6c
      command: chmod -R o-rwx /etc/keystone/ssl

    - name: enable Keystone service
      service: enabled=yes name=openstack-keystone state=started

    - name: touch files
      command: touch /var/spool/cron/keystone && touch /var/log/keystone/keystone-tokenflush.log

#    - name: Step 8
#      command: (crontab -l -u keystone 2>&1 | grep -q token_flush) || echo '@hourly /usr/bin/keystone-manage token_flush >/var/log/keystone/keystone-tokenflush.log 2>&1' >> /var/spool/cron/keystone

    - name: define keystone user, tenants and roles
      script: scripts/keystone.sh
